cabal-version: 3.0
name: mcp-selenium
version: 1.0.0
synopsis: A Haskell implementation of MCP Selenium Server using WebDriver
description:
  A Model Context Protocol (MCP) server implementation for Selenium WebDriver in Haskell,
  enabling browser automation through standardized MCP clients like Claude.
  .
  Features include:
  - Start browser sessions with customizable options
  - Navigate to URLs and interact with page elements
  - Find elements using various locator strategies
  - Click, type, and interact with elements
  - Perform mouse actions (hover, drag and drop)
  - Take screenshots
  - Support for headless mode
  - Console logs functionality
  - Support for Chrome and Firefox browsers

homepage: https://github.com/albertov/mcp-selenium-haskell
bug-reports: https://github.com/albertov/mcp-selenium-haskell/issues
license: BSD-3-Clause
license-file: LICENSE
author: Alberto Valverde
maintainer: alberto@toscat.net
category: Web, Browser, Testing, WebDriver, Selenium, MCP
build-type: Simple
tested-with:
    GHC == 9.12.2

extra-source-files:
  README.md
  CHANGELOG.md

source-repository head
  type: git
  location: https://github.com/albertov/mcp-selenium-haskell

library
  exposed-modules:
    MCP.Selenium.Server
    MCP.Selenium.Tools
    MCP.Selenium.WebDriver

  hs-source-dirs: src

  default-language: Haskell2010

  ghc-options:
    -Wall
    -Wredundant-constraints
    -Wunused-packages

  build-depends:
    base,
    aeson,
    aeson-qq,
    text,
    bytestring,
    base64-bytestring,
    containers,
    unordered-containers,
    webdriver,
    hs-mcp,
    stm,
    async,
    microlens,
    generic-lens


test-suite mcp-selenium-test
  type: exitcode-stdio-1.0
  main-is: Test.hs
  hs-source-dirs: test

  default-language: Haskell2010

  ghc-options:
    -Wall
    -Wredundant-constraints
    -Wunused-packages
    -threaded
    -rtsopts
    -with-rtsopts=-N

  build-depends:
    base,
    mcp-selenium,
    hspec,
    QuickCheck,
    aeson,
    aeson-qq,
    text,
    webdriver
